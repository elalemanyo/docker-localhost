version: '2'

services:
  traefik:
    container_name: traefik
    image: traefik
    restart: unless-stopped
    command: -c /dev/null --web --docker --logLevel=DEBUG
    ports:
      - '80:80'
      - '8080:8080'
      - '8025:8025'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      frontend: {}

  mailhog:
    container_name: mailhog
    image: mailhog/mailhog
    labels:
      - 'traefik.backend=mailhog'
      - 'traefik.port=8025'
      - 'traefik.frontend.rule=Host:mailhog.dev'
      - 'traefik.docker.network=dockerlocalhost_frontend'
    networks:
      frontend: {}
      backend: {}

  portainer:
    container_name: portainer
    image: portainer/portainer
    command: --no-auth -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - 'traefik.backend=portainer'
      - 'traefik.port=9000'
      - 'traefik.frontend.rule=Host:portainer.dev'
    networks:
      frontend: {}

  # duckrails:
  #   container_name: duckrails
  #   image: iridakos/duckrails
  #   labels:
  #     - 'traefik.backend=duckrails'
  #     - 'traefik.port=80'
  #     - 'traefik.frontend.rule=Host:duckrails.dev'
  #   volumes:
  #     - ./duckrails:/opt/duckrails/db
  #   networks:
  #     frontend: {}

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge
